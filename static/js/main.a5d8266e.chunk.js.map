{"version":3,"sources":["utils/auth.js","utils/mutations.js","pages/Login.js","pages/Signup.js","pages/Homepage.js","pages/Date.js","utils/queries.js","pages/Profile.js","App.js","index.js"],"names":["getToken","localStorage","getItem","loggedIn","token","decode","exp","Date","now","removeItem","isTokenExpired","login","idToken","setItem","window","location","assign","logout","reload","LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","ADD_EVENT","_templateObject3","Login","props","_useState","useState","email","password","_useState2","_slicedToArray","formState","setFormState","_useMutation","useMutation","_useMutation2","loginMutation","_useMutation2$","error","data","handleChange","event","_event$target","target","name","value","_objectSpread","_defineProperty","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$loginMutation","_data","wrap","_context","prev","next","preventDefault","console","log","variables","sent","t0","stop","_x","apply","arguments","_jsxs","children","_jsx","onSubmit","for","placeholder","type","onChange","style","cursor","message","Signup","addUser","_yield$addUser","Link","to","Homepage","className","DateDisplay","date","setDate","day","dayjs","format","formattedDate","useEffect","changeTime","setInterval","clearInterval","QUERY_USER","QUERY_ME","localizer","momentLocalizer","moment","Profile","title","start","end","newEvent","setNewEvent","_useState3","_useState4","allEvents","setAllEvents","eventMutation","addEventCalendar","_eventMutation","e","concat","_toConsumableArray","userParam","useParams","_useQuery","useQuery","loading","user","me","Navigate","placeholer","width","margin","DatePicker","placeholderText","selected","onClick","Calendar","events","map","evt","startAccessor","endAccessor","height","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","href","_Fragment","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"mTAEaA,EAAW,WACtB,OAAOC,aAAaC,QAAQ,WAC9B,EAkBaC,EAAW,WACtB,IAAMC,EAAQJ,IAEd,SAAOI,GAfqB,SAACA,GAI7B,OAFgBC,YAAOD,GAEXE,IAAMC,KAAKC,MAAQ,MAC7BP,aAAaQ,WAAW,aACjB,EAIX,CAKmBC,CAAeN,GAClC,EAEaO,EAAQ,SAACC,GACpBX,aAAaY,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,WACzB,EAEaC,EAAS,WACpBhB,aAAaQ,WAAW,YACxBK,OAAOC,SAASG,QAClB,E,yDClCaC,EAAaC,YAAGC,MAAAC,YAAA,iLAWhBC,EAAWH,YAAGI,MAAAF,YAAA,qLAWdG,EAAYL,YAAGM,MAAAJ,YAAA,uM,OCwDbK,EA1ED,SAACC,GACb,IAAAC,EAAkCC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,KAAKC,EAAAC,YAAAL,EAAA,GAAhEM,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAyCC,YAAYnB,GAAWoB,EAAAL,YAAAG,EAAA,GAAzDG,EAAaD,EAAA,GAAAE,EAAAF,EAAA,GAAIG,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAGzBC,EAAe,SAACC,GACpB,IAAAC,EAAwBD,EAAME,OAAtBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAEdb,EAAYc,wBAAC,CAAC,EACTf,GAAS,GAAAgB,YAAA,GACXH,EAAOC,IAEZ,EAGMG,EAAgB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOZ,GAAK,IAAAa,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEZ,OADvBlB,EAAMmB,iBACNC,QAAQC,IAAI/B,GAAW0B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEEvB,EAAc,CACnC2B,UAASjB,YAAA,GAAOf,KACf,KAAD,EAAAuB,EAAAG,EAAAO,KAFMzB,EAAIe,EAAJf,KAIRhC,EAAMgC,EAAKhC,MAAMP,OAAOyD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAExBI,QAAQvB,MAAKmB,EAAAQ,IAAI,QAInBjC,EAAa,CACXL,MAAO,GACPC,SAAU,KACT,yBAAA6B,EAAAS,OAAA,GAAAb,EAAA,mBACJ,gBAlBqBc,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAoBtB,OACEC,eAAA,QAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,UACJD,eAAA,OAAAC,SAAA,CACGhC,EACCiC,cAAA,KAAAD,SAAG,iCAEHD,eAAA,QAAMG,SAAUzB,EAAiBuB,SAAA,CAC/BC,cAAA,SAAOE,IAAI,QAAOH,SAAC,UACnBC,cAAA,SACAA,cAAA,SACEG,YAAY,aACZ/B,KAAK,QACLgC,KAAK,QACL/B,MAAOd,EAAUJ,MACjBkD,SAAUrC,IAEZgC,cAAA,SACAA,cAAA,SAAOE,IAAI,WAAUH,SAAC,aACtBC,cAAA,SACAA,cAAA,SACEG,YAAY,SACZ/B,KAAK,WACLgC,KAAK,WACL/B,MAAOd,EAAUH,SACjBiD,SAAUrC,IAEZgC,cAAA,SACAA,cAAA,UAAQM,MAAO,CAAEC,OAAQ,WAAaH,KAAK,SAAQL,SAAC,cAKvDjC,GAASkC,cAAA,OAAAD,SAAMjC,EAAM0C,eAI9B,ECEeC,EAxEA,WACb,IAAAxD,EAAkCC,mBAAS,CACzCC,MAAO,GACPC,SAAU,KACVC,EAAAC,YAAAL,EAAA,GAHKM,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAI9BI,EAAmCC,YAAYf,GAASgB,EAAAL,YAAAG,EAAA,GAAjDiD,EAAO/C,EAAA,GAAAE,EAAAF,EAAA,GAAIG,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAEnBC,EAAe,SAACC,GACpB,IAAAC,EAAwBD,EAAME,OAAtBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAEdb,EAAYc,wBAAC,CAAC,EACTf,GAAS,GAAAgB,YAAA,GACXH,EAAOC,IAEZ,EAEMG,EAAgB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOZ,GAAK,IAAA0C,EAAA5B,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEZ,OADvBlB,EAAMmB,iBACNC,QAAQC,IAAI/B,GAAW0B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGEuB,EAAQ,CAC7BnB,UAASjB,YAAA,GAAOf,KACf,KAAD,EAAAoD,EAAA1B,EAAAO,KAFMzB,EAAI4C,EAAJ5C,KAIRhC,EAAMgC,EAAK2C,QAAQlF,OAAOyD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAE1BI,QAAQvB,MAAKmB,EAAAQ,IAAI,yBAAAR,EAAAS,OAAA,GAAAb,EAAA,mBAEpB,gBAbqBc,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAetB,OACEC,eAAA,QAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,YACJD,eAAA,OAAAC,SAAA,CACGhC,EACC+B,eAAA,KAAAC,SAAA,CAAG,6BACyBC,cAACY,IAAI,CAACC,GAAG,IAAGd,SAAC,6BAGzCD,eAAA,QAAMG,SAAUzB,EAAiBuB,SAAA,CAC/BC,cAAA,SAAOE,IAAI,QAAOH,SAAC,UACnBC,cAAA,SACAA,cAAA,SACEG,YAAY,aACZ/B,KAAK,QACLgC,KAAK,QACL/B,MAAOd,EAAUJ,MACjBkD,SAAUrC,IAEZgC,cAAA,SACAA,cAAA,SAAOE,IAAI,WAAUH,SAAC,aACtBC,cAAA,SACAA,cAAA,SACEG,YAAY,SACZ/B,KAAK,WACLgC,KAAK,WACL/B,MAAOd,EAAUH,SACjBiD,SAAUrC,IAEZgC,cAAA,SACAA,cAAA,UAAQM,MAAO,CAAEC,OAAQ,WAAaH,KAAK,SAAQL,SAAC,cAKvDjC,GAASkC,cAAA,OAAAD,SAAMjC,EAAM0C,eAI9B,EC7DeM,EAZE,WACf,OACEhB,eAAA,OAAKiB,UAAU,WAAUhB,SAAA,CACvBC,cAAA,MAAAD,SAAI,6CACJC,cAAA,KAAAD,SAAG,2BACHC,cAACjD,EAAK,IACNiD,cAAA,KAAAD,SAAG,oCACHC,cAACS,EAAM,MAGb,E,mCCSiBO,G,OAnBG,WAChB,IAAA/D,EAAwBC,mBAAS,IAAIvB,MAAO0B,EAAAC,YAAAL,EAAA,GAArCgE,EAAI5D,EAAA,GAAE6D,EAAO7D,EAAA,GACd8D,EAAMC,IAAMH,GAAMI,OAAO,MACzBC,EAAgBF,IAAMH,GAAMI,OAAO,aASzC,OAPAE,qBAAU,WACN,IAAIC,EAAaC,aAAY,kBAAIP,EAAQ,IAAIvF,KAAO,GAAE,KACtD,OAAO,WACH+F,cAAcF,EAClB,CACJ,IAGExB,cAAA,OAAKe,UAAU,mCAAkChB,SAC/CD,eAAA,OAAKiB,UAAU,MAAKhB,SAAA,CAAEoB,EAAI,MAAIG,MAGpC,G,+DCpBWK,G,OAAanF,YAAGC,MAAAC,YAAA,oIAsBhBkF,GAZepF,YAAGI,MAAAF,YAAA,4HAYPF,YAAGM,MAAAJ,YAAA,6KCVrBmF,EAAYC,YAAgBC,KAuGnBC,EApGC,SAAChF,GACf,IAAAC,EAAgCC,mBAAS,CAAE+E,MAAO,GAAIC,MAAO,GAAIC,IAAK,KAAK9E,EAAAC,YAAAL,EAAA,GAApEmF,EAAQ/E,EAAA,GAAEgF,EAAWhF,EAAA,GAC5BiF,EAAkCpF,mBAAS,UAASqF,EAAAjF,YAAAgF,EAAA,GAA7CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9B9E,EAAmCC,YAAYb,GAAUc,EAAAL,YAAAG,EAAA,GAAlDiF,EAAa/E,EAAA,GAAIG,EAAKH,EAAA,GAALG,MAElB6E,EAAgB,eAAAlE,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOZ,GAAK,IAAA2E,EAAA,OAAAjE,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnClB,EAAMmB,iBACNC,QAAQC,IAAI8C,GACZ,IAAIQ,EACeF,EAAc,CAC7BnD,UAASjB,YAAA,GACJ8D,KAFKQ,EAAJ7E,IAKV,CAAE,MAAO8E,GACPxD,QAAQvB,MAAM+E,EAChB,CACAJ,EAAa,GAADK,OAAAC,YAAKP,GAAS,CAAEJ,KAE5BC,EAAY,CACVJ,MAAO,GACPC,MAAO,GACPC,IAAK,KAEPjG,OAAOC,SAASG,SAAS,wBAAA2C,EAAAS,OAAA,GAAAb,EAAA,KAC1B,gBApBqBc,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAsBPmD,EAAcC,cAArB9F,MAER+F,EAA0BC,YAASH,EAAYrB,EAAaC,EAAU,CACpErC,UAAW,CAAEpC,MAAO6F,KADdI,EAAOF,EAAPE,QAASrF,EAAImF,EAAJnF,KAIXsF,GAAW,OAAJtF,QAAI,IAAJA,OAAI,EAAJA,EAAMuF,MAAU,OAAJvF,QAAI,IAAJA,OAAI,EAAJA,EAAMsF,OAAQ,CAAC,EACxC,OAAI9H,KP5CGE,YAAOL,KO4CiB2C,KAAKZ,QAAU6F,EACrChD,cAACuD,IAAQ,CAAC1C,GAAG,aAGlBuC,EACKpD,cAAA,OAAAD,SAAK,eAGL,OAAJsD,QAAI,IAAJA,KAAMlG,MAUT2C,eAAA,OAAKiB,UAAU,UAAShB,SAAA,CACtBC,cAAEgB,EAAW,IACbhB,cAAA,MAAIe,UAAU,cAAahB,SAAC,gBAC5BD,eAAA,SAAOiB,UAAU,cAAahB,SAAA,CAC5BC,cAAA,OAAKe,UAAU,cAAahB,SAAC,mBAC7BC,cAAA,SACEI,KAAK,OACLoD,WAAW,YACXlD,MAAO,CAAEmD,MAAO,MAAOC,OAAQ,QAC/BrF,MAAO+D,EAASH,MAChB5B,SAAU,SAACwC,GAAC,OAAKR,EAAW/D,wBAAC,CAAC,EAAI8D,GAAQ,IAAEH,MAAOY,EAAE1E,OAAOE,QAAQ,IAEtE2B,cAAC2D,IAAU,CACTC,gBAAgB,aAChBtD,MAAO,CAAEmD,MAAO,MAAOC,OAAQ,QAC/BG,SAAUzB,EAASF,MACnB7B,SAAU,SAAC6B,GAAK,OAAKG,EAAW/D,wBAAC,CAAC,EAAI8D,GAAQ,IAAEF,UAAQ,IAE1DlC,cAAC2D,IAAU,CACTC,gBAAgB,WAChBtD,MAAO,CAACmD,MAAO,OACfI,SAAUzB,EAASD,IACnB9B,SAAU,SAAC8B,GAAG,OAAKE,EAAW/D,wBAAC,CAAC,EAAI8D,GAAQ,IAAED,QAAM,IAEtDnC,cAAA,UAAQM,MAAO,CAAEmD,MAAO,MAAOC,OAAQ,QAASI,QAASnB,EAAkB5B,UAAU,YAAWhB,SAAC,cAGhGjC,GACCkC,cAAA,OAAKe,UAAU,uCAAsChB,SAAC,+BAM1DC,cAAC+D,IAAQ,CACPhD,UAAU,kBACVc,UAAWA,EACXmC,OAAQX,EAAKW,OAAOC,KAAI,SAACC,GACvB,OAAA5F,wBAAA,GAAY4F,GAAG,IAAEhC,MAAO,IAAIvG,KAAKuI,EAAIhC,OAAQC,IAAK,IAAIxG,KAAKuI,EAAI/B,MACjE,IACAgC,cAAc,QACdC,YAAY,MACZ9D,MAAO,CAAE+D,OAAQ,UAlDnBrE,cAAA,MAAAD,SAAI,8FAsDV,ECtGMuE,GAAWC,YAAe,CAC9BC,IAAK,aAIDC,GAAWC,aAAW,SAACC,EAAClG,GAAmB,IAAfmG,EAAOnG,EAAPmG,QAE1BpJ,EAAQH,aAAaC,QAAQ,YAEnC,MAAO,CACLsJ,QAAOtG,wBAAA,GACFsG,GAAO,IACVC,cAAerJ,EAAK,UAAAsH,OAAatH,GAAU,KAGjD,IAEMsJ,GAAS,IAAIC,IAAa,CAE9BC,KAAMP,GAAS3B,OAAOwB,IACtBW,MAAO,IAAIC,MA6CEC,OA1Cf,WACE,OACEnF,cAACoF,IAAc,CAACN,OAAQA,GAAO/E,SAC7BC,cAACqF,IAAM,CAAAtF,SACLD,eAAA,OAAAC,SAAA,CACED,eAAA,MAAAC,SAAA,CACEC,cAAA,MAAAD,SACEC,cAACY,IAAI,CAACC,GAAG,IAAGd,SAAC,WAEbxE,IAcAyE,cAAA,MAAAD,SACEC,cAAA,KAAGsF,KAAK,KAAKxB,QAASzH,EAAO0D,SAAC,cAdhCD,eAAAyF,WAAA,CAAAxF,SAAA,CACEC,cAAA,MAAAD,SACEC,cAACY,IAAI,CAACC,GAAG,SAAQd,SAAC,YAEpBC,cAAA,MAAAD,SACEC,cAACY,IAAI,CAACC,GAAG,UAASd,SAAC,aAErBC,cAAA,MAAAD,SACEC,cAACY,IAAI,CAACC,GAAG,WAAUd,SAAC,cAEtBC,cAACgB,EAAW,UAUlBlB,eAAC0F,IAAM,CAAAzF,SAAA,CACLC,cAACyF,IAAK,CAACC,KAAK,IAAIC,QAAS3F,cAACc,EAAQ,MAClCd,cAACyF,IAAK,CAACC,KAAK,SAASC,QAAS3F,cAACjD,EAAK,MACpCiD,cAACyF,IAAK,CAACC,KAAK,UAAUC,QAAS3F,cAACS,EAAM,MACtCT,cAACyF,IAAK,CAACC,KAAK,WAAWC,QAAS3F,cAACgC,EAAO,eAMpD,E,OCrEA4D,IAASC,OACP7F,cAAC8F,IAAMC,WAAU,CAAAhG,SACfC,cAACmF,GAAG,MAENa,SAASC,eAAe,Q","file":"static/js/main.a5d8266e.chunk.js","sourcesContent":["import decode from \"jwt-decode\";\n\nexport const getToken = () => {\n  return localStorage.getItem(\"id_token\");\n};\n\nexport const getProfile = () => {\n  return decode(getToken());\n};\n\nexport const isTokenExpired = (token) => {\n  // Decode the token to get its expiration time that was set by the server\n  const decoded = decode(token);\n  // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n  if (decoded.exp < Date.now() / 1000) {\n    localStorage.removeItem(\"id_token\");\n    return true;\n  }\n  // If token hasn't passed its expiration time, return `false`\n  return false;\n};\n\nexport const loggedIn = () => {\n  const token = getToken();\n  // If there is a token and it's not expired, return `true`\n  return token && !isTokenExpired(token) ? true : false;\n};\n\nexport const login = (idToken) => {\n  localStorage.setItem(\"id_token\", idToken);\n  window.location.assign(\"/Profile\");\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"id_token\");\n  window.location.reload();\n};\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($email: String!, $password: String!) {\n    addUser(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_EVENT = gql`\n  mutation addEvent($title: String!, $start: String!, $end: String!) {\n    addEvent(title: $title, start: $start, end: $end) {\n      _id\n      title\n      start\n      end\n    }\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport { login } from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [loginMutation, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await loginMutation({\n        variables: { ...formState },\n      });\n\n      login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <main>\n      <h4>Login</h4>\n      <div>\n        {data ? (\n          <p>Success! You have logged in!</p>\n        ) : (\n          <form onSubmit={handleFormSubmit}>\n            <label for=\"email\">Email</label>\n            <br />\n            <input\n              placeholder=\"Your email\"\n              name=\"email\"\n              type=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n            <br />\n            <label for=\"password\">Password</label>\n            <br />\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n            <br />\n            <button style={{ cursor: \"pointer\" }} type=\"submit\">\n              Submit\n            </button>\n          </form>\n        )}\n        {error && <div>{error.message}</div>}\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport { login } from \"../utils/auth\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main>\n      <h4>Sign Up</h4>\n      <div>\n        {data ? (\n          <p>\n            Success! You may now head <Link to=\"/\">back to the homepage.</Link>\n          </p>\n        ) : (\n          <form onSubmit={handleFormSubmit}>\n            <label for=\"email\">Email</label>\n            <br />\n            <input\n              placeholder=\"Your email\"\n              name=\"email\"\n              type=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n            <br />\n            <label for=\"password\">Password</label>\n            <br />\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n            <br />\n            <button style={{ cursor: \"pointer\" }} type=\"submit\">\n              Submit\n            </button>\n          </form>\n        )}\n        {error && <div>{error.message}</div>}\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Login from './Login';\nimport Signup from './Signup';\n\nconst Homepage = () => {\n  return (\n    <div className=\"homepage\">\n      <h1>Welcome to the Highlighter Calendar App!</h1>\n      <p>Login to your account:</p>\n      <Login />\n      <p>Don't have an account? Sign up:</p>\n      <Signup />\n    </div>\n  );\n};\n\nexport default Homepage;\n\n","import  React, { useState, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport \"./Date.css\";\n\n\nconst DateDisplay = () => {\n    const [date, setDate] = useState(new Date());\n    const day = dayjs(date).format(\"MM\");\n    const formattedDate = dayjs(date).format(\"MMMM YYYY\");\n  \n    useEffect(() => {\n        var changeTime = setInterval(()=>setDate(new Date()), 1000 )\n        return function changeTimer() {\n            clearInterval(changeTime)\n        }\n    })\n\n    return (\n      <div className=\"row date-display p-3 text-center\">\n        <div className='col'>{day} | {formattedDate}</div>\n      </div>\n    );\n  };\n  \n  export default DateDisplay;\n  ","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n    }\n  }\n`;\n\nexport const QUERY_EVENTS = gql`\n  query getEvents {\n    events {\n      _id\n      title\n      start\n      end\n      eventAuthor\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      email\n      events {\n        _id\n        title\n        start\n        end\n        eventAuthor\n      }\n    }\n  }\n`;\n","import \"./Profile.css\";\nimport DateDisplay from \"./Date\";\nimport React, { useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_EVENT } from \"../utils/mutations\";\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\nimport { loggedIn, getProfile } from \"../utils/auth\";\nconst localizer = momentLocalizer(moment);\n\n\nconst Profile = (props) => {\n  const [newEvent, setNewEvent] = useState({ title: \"\", start: \"\", end: \"\" });\n  const [allEvents, setAllEvents] = useState(\"events\");\n  const [eventMutation, { error }] = useMutation(ADD_EVENT);\n\n  const addEventCalendar = async (event) => {\n    event.preventDefault();\n    console.log(newEvent);\n    try {\n      const { data } = eventMutation({\n        variables: {\n          ...newEvent,\n        },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n    setAllEvents([...allEvents, newEvent]);\n\n    setNewEvent({\n      title: \"\",\n      start: \"\",\n      end: \"\",\n    });\n    window.location.reload();\n  };\n\n  const { email: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { email: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  if (loggedIn() && getProfile().data.email === userParam) {\n    return <Navigate to=\"/profile\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.email) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div className=\"Profile\">\n      < DateDisplay />\n      <h2 className=\"my-calendar\">My Calendar</h2>\n      <aside className=\"date-picker\">\n        <div className=\"event-title\">Add Your Event</div>\n        <input\n          type=\"text\"\n          placeholer=\"Add Title\"\n          style={{ width: \"60%\", margin: \"20px\" }}\n          value={newEvent.title}\n          onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}\n        ></input>\n        <DatePicker\n          placeholderText=\"Start Date\"\n          style={{ width: \"60%\", margin: \"20px\"}}\n          selected={newEvent.start}\n          onChange={(start) => setNewEvent({ ...newEvent, start })}\n        />\n        <DatePicker\n          placeholderText=\"End Date\"\n          style={{width: \"60%\"}}\n          selected={newEvent.end}\n          onChange={(end) => setNewEvent({ ...newEvent, end })}\n        />\n        <button style={{ width: \"60%\", margin: \"20px\"}} onClick={addEventCalendar} className=\"button-74\">\n          Add Event\n        </button>\n        {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n      </aside>\n\n      <Calendar\n        className=' react-calendar'\n        localizer={localizer}\n        events={user.events.map((evt) => {\n          return { ...evt, start: new Date(evt.start), end: new Date(evt.end) };\n        })}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500}}\n      />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { loggedIn, logout } from \"./utils/auth\";\n\nimport Homepage from \"./pages/Homepage\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport DateDisplay from \"./pages/Date\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            {!loggedIn() ? (\n              <>\n                <li>\n                  <Link to=\"/login\">Login</Link>\n                </li>\n                <li>\n                  <Link to=\"/signup\">Signup</Link>\n                </li>\n                <li>\n                  <Link to=\"/profile\">Profile</Link>\n                </li>\n                <DateDisplay></DateDisplay>\n              </>\n            ) : (\n              <li>\n                <a href=\"/#\" onClick={logout}>\n                  Log Out\n                </a>\n              </li>\n            )}\n          </ul>\n          <Routes>\n            <Route path=\"/\" element={<Homepage />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/Profile\" element={<Profile />} />\n          </Routes>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}